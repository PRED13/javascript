import { Status } from './status';
type localId = {
    galar?: string;
    paldea?: string;
};
type PokemonAbility = {
    name: string;
    hidden: boolean;
    terastallised?: boolean;
};
export declare class Pokemon {
    id: string;
    name: string;
    formName?: string;
    localId?: localId;
    type: string[];
    ability: PokemonAbility[];
    eggGroup: string;
    baseStats: Status;
    megaEvolution?: MegaPokemon[];
    generation: number;
    constructor(pokemon: any, gen: number, lang: string);
    /**
     * Compares Pokemon name with the specified object for order.
     *
     * @param pokemon pokemon to be compared
     * @return {number} -1, 0, or 1 as this object is less than, equal to, or greater than the specified object.
     */
    compareName: (pokemon: Pokemon) => number;
    /**
     * Compares Pokemon id with the specified object for order.
     *
     * @param pokemon pokemon to be compared
     * @return {number} a negative integer, zero, or a positive integer as this object is less than, equal to, or greater than the specified object.
     */
    compareId: (pokemon: Pokemon) => number;
}
declare class MegaPokemon {
    name: string;
    type: string;
    ability: PokemonAbility[];
    baseStats: Status;
    constructor(pokemon: any, lang: string);
}
export {};
